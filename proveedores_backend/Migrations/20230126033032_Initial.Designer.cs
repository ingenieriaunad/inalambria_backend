// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proveedores_backend;

#nullable disable

namespace proveedoresbackend.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230126033032_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("proveedores_backend.Models.Product", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProvider")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdProvider");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            IdProduct = new Guid("b775477b-8c4d-4d7b-964b-092497ea8935"),
                            IdProvider = new Guid("8ff00858-4005-4ab3-8fa6-701b9f93f6ef"),
                            Name = "Producto 1",
                            Price = 1000,
                            Stock = 10
                        },
                        new
                        {
                            IdProduct = new Guid("a99ed444-60ba-489d-8e66-d62eb1f67762"),
                            IdProvider = new Guid("4dab72fe-beb5-42dd-9601-61e7691d17c6"),
                            Name = "Producto 2",
                            Price = 2000,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("proveedores_backend.Models.Provider", b =>
                {
                    b.Property<Guid>("IdProvider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdProvider");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            IdProvider = new Guid("8ff00858-4005-4ab3-8fa6-701b9f93f6ef"),
                            Email = "proveedor1@inalambria.com",
                            Identification = "123456789",
                            Name = "Proveedor 1",
                            Phone = "123456789"
                        },
                        new
                        {
                            IdProvider = new Guid("4dab72fe-beb5-42dd-9601-61e7691d17c6"),
                            Email = "proveedor2@inalambria.com",
                            Identification = "987654321",
                            Name = "Proveedor 2",
                            Phone = "987654321"
                        });
                });

            modelBuilder.Entity("proveedores_backend.Models.Sale", b =>
                {
                    b.Property<Guid>("IdSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("IdSale");

                    b.HasIndex("IdProducto");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            IdSale = new Guid("3c694f64-8e17-4f7a-8bc2-a901b5d2bac4"),
                            Date = new DateTime(2023, 1, 25, 22, 30, 32, 448, DateTimeKind.Local).AddTicks(7131),
                            IdProducto = new Guid("b775477b-8c4d-4d7b-964b-092497ea8935"),
                            Quantity = 1,
                            Total = 1000
                        },
                        new
                        {
                            IdSale = new Guid("7678cb8e-50c6-447b-85ae-32e11a9e447b"),
                            Date = new DateTime(2023, 1, 25, 22, 30, 32, 448, DateTimeKind.Local).AddTicks(7151),
                            IdProducto = new Guid("a99ed444-60ba-489d-8e66-d62eb1f67762"),
                            Quantity = 2,
                            Total = 4000
                        });
                });

            modelBuilder.Entity("proveedores_backend.Models.Product", b =>
                {
                    b.HasOne("proveedores_backend.Models.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("IdProvider")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("proveedores_backend.Models.Sale", b =>
                {
                    b.HasOne("proveedores_backend.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("proveedores_backend.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("proveedores_backend.Models.Provider", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
